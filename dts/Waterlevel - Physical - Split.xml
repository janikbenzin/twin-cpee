<testset xmlns="http://cpee.org/ns/properties/2.0">
  <executionhandler>ruby</executionhandler>
  <dataelements/>
  <endpoints>
    <timeout>https-post://cpee.org/services/timeout.php</timeout>
    <dtcget>https-get://cpee.org/dtc/9/all</dtcget>
    <levelset>https-put://cpee.org/dtc/9/sensors/level</levelset>
  </endpoints>
  <attributes>
    <guarded>none</guarded>
    <modeltype>CPEE</modeltype>
    <guarded_id/>
    <theme>dataflow</theme>
    <info>Waterlevel - Physical - Split</info>
    <creator>Christine Ashcreek</creator>
    <author>Christine Ashcreek</author>
    <model_uuid>50d5378c-0c1c-48fa-bc72-e7485d3e4ea4</model_uuid>
    <model_version/>
    <design_stage>development</design_stage>
    <design_dir>Experiments.dir/Digital Twin Container.dir/WaterLevel.dir/</design_dir>
  </attributes>
  <description>
    <description xmlns="http://cpee.org/ns/description/1.0">
      <manipulate id="a3" label="Initialize Time">data.local_clock = Time.now
data.start = Time.now.to_i</manipulate>
      <call id="a7" endpoint="dtcget">
        <parameters>
          <label>Read</label>
          <arguments/>
        </parameters>
        <code>
          <prepare/>
          <finalize output="result"/>
          <update output="result">if result['full']
  data.data = result['full']
end
if result['partial']
  data.data[result['partial']['group'] + '/' + result['partial']['name']] = result['partial']['value']
end</update>
          <rescue output="result"/>
        </code>
        <annotations>
          <_generic/>
          <_timing>
            <_timing_weight/>
            <_timing_avg/>
            <explanations/>
          </_timing>
          <_shifting>
            <_shifting_type>Duration</_shifting_type>
          </_shifting>
          <_context_data_analysis>
            <probes/>
            <ips/>
          </_context_data_analysis>
          <report>
            <url/>
          </report>
          <_notes>
            <_notes_general/>
          </_notes>
        </annotations>
        <documentation>
          <input/>
          <output/>
          <implementation>
            <description/>
          </implementation>
          <code>
            <description/>
          </code>
        </documentation>
      </call>
      <parallel wait="1" cancel="last">
        <parallel_branch pass="" local="">
          <call id="a5" endpoint="dtcget">
            <parameters>
              <label>Read</label>
              <arguments>
                <many>true</many>
              </arguments>
            </parameters>
            <code>
              <prepare/>
              <finalize output="result"/>
              <update output="result">if result['full']
  data.data = result['full']
end
if result['partial']
  data.data[result['partial']['group'] + '/' + result['partial']['name']] = result['partial']['value']
end</update>
              <rescue output="result"/>
            </code>
            <annotations>
              <_generic/>
              <_timing>
                <_timing_weight/>
                <_timing_avg/>
                <explanations/>
              </_timing>
              <_shifting>
                <_shifting_type>Duration</_shifting_type>
              </_shifting>
              <_context_data_analysis>
                <probes/>
                <ips/>
              </_context_data_analysis>
              <report>
                <url/>
              </report>
              <_notes>
                <_notes_general/>
              </_notes>
            </annotations>
            <documentation>
              <input/>
              <output/>
              <implementation>
                <description/>
              </implementation>
              <code>
                <description/>
              </code>
            </documentation>
          </call>
        </parallel_branch>
        <parallel_branch pass="" local="">
          <loop mode="post_test" condition="data.duration &lt; 20">
            <_probability>
              <_probability_min/>
              <_probability_max/>
              <_probability_avg/>
            </_probability>
            <call id="a4" endpoint="timeout">
              <parameters>
                <label>Wait</label>
                <arguments>
                  <timeout>1</timeout>
                </arguments>
              </parameters>
              <code>
                <prepare/>
                <finalize output="result">data.duration = Time.now.to_i - data.start</finalize>
                <update output="result"/>
                <rescue output="result"/>
              </code>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
            <choose mode="exclusive">
              <alternative condition="data.data['actuators/flow']">
                <_probability>
                  <_probability_min/>
                  <_probability_max/>
                  <_probability_avg/>
                </_probability>
                <manipulate id="a1" label="On">time = Time.now - Time.parse(data.local_clock)
y = -2 * time + data.data['sensors/level']
data.new_level = y
data.local_clock = Time.now</manipulate>
              </alternative>
              <otherwise>
                <manipulate id="a6" label="Off">time = Time.now - Time.parse(data.local_clock)
y = time + data.data['sensors/level'].to_f
data.new_level = y
data.local_clock = Time.now</manipulate>
              </otherwise>
            </choose>
            <call id="a2" endpoint="levelset">
              <parameters>
                <label>Set Level</label>
                <method>:post</method>
                <arguments>
                  <float>!data.new_level</float>
                </arguments>
              </parameters>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
              </documentation>
            </call>
          </loop>
        </parallel_branch>
      </parallel>
    </description>
  </description>
  <transformation>
    <description type="copy"/>
    <dataelements type="none"/>
    <endpoints type="none"/>
  </transformation>
</testset>